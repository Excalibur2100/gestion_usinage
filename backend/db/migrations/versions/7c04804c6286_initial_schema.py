"""initial schema

Revision ID: 7c04804c6286
Revises: 
Create Date: 2025-05-04 14:10:54.647473

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7c04804c6286'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=True),
    sa.Column('telephone', sa.String(length=50), nullable=True),
    sa.Column('adresse', sa.String(length=255), nullable=True),
    sa.Column('siret', sa.String(length=20), nullable=True),
    sa.Column('tva_intracom', sa.String(length=20), nullable=True),
    sa.Column('secteur_activite', sa.String(length=100), nullable=True),
    sa.Column('site_web', sa.String(length=150), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('documents_qhse',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=150), nullable=False, comment='Nom du document QHSE'),
    sa.Column('type_document', sa.String(length=100), nullable=False, comment='Type de document (ex: procédure, rapport, norme)'),
    sa.Column('chemin_fichier', sa.String(length=255), nullable=False, comment='Chemin du fichier sur le disque'),
    sa.Column('date_creation', sa.DateTime(), nullable=False, comment='Date de création du document'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description ou remarques sur le document'),
    sa.Column('actif', sa.String(length=50), nullable=False, comment='Statut du document (actif, archivé)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents_qualite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(length=255), nullable=False, comment='Titre du document'),
    sa.Column('contenu', sa.Text(), nullable=False, comment='Contenu du document'),
    sa.Column('date_creation', sa.DateTime(), nullable=False, comment='Date de création du document'),
    sa.Column('auteur', sa.String(length=100), nullable=True, comment='Auteur du document'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents_reglementaires',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=150), nullable=False, comment='Nom du document réglementaire'),
    sa.Column('type_document', sa.String(length=100), nullable=False, comment='Type de document (ex: certificat, norme, procédure)'),
    sa.Column('chemin_fichier', sa.String(length=255), nullable=False, comment='Chemin du fichier sur le disque'),
    sa.Column('date_creation', sa.DateTime(), nullable=False, comment='Date de création du document'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description ou remarques sur le document'),
    sa.Column('actif', sa.String(length=50), nullable=False, comment='Statut du document (actif, archivé)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emplacements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment="Nom de l'emplacement"),
    sa.Column('type', sa.String(length=50), nullable=False, comment="Type d'emplacement (ex: armoire, rack, bac)"),
    sa.Column('capacite', sa.Float(), nullable=False, comment="Capacité maximale de l'emplacement (en kg)"),
    sa.Column('occupation_actuelle', sa.Float(), nullable=False, comment="Occupation actuelle de l'emplacement (en kg)"),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment="Nom de l'employé"),
    sa.Column('prenom', sa.String(length=100), nullable=False, comment="Prénom de l'employé"),
    sa.Column('email', sa.String(length=150), nullable=True, comment="Adresse email de l'employé"),
    sa.Column('telephone', sa.String(length=20), nullable=True, comment="Numéro de téléphone de l'employé"),
    sa.Column('date_naissance', sa.Date(), nullable=False, comment="Date de naissance de l'employé"),
    sa.Column('numero_securite_sociale', sa.String(length=15), nullable=False, comment="Numéro de sécurité sociale de l'employé"),
    sa.Column('adresse', sa.String(length=255), nullable=True, comment="Adresse de l'employé"),
    sa.Column('salaire', sa.Float(), nullable=False, comment="Salaire brut mensuel de l'employé"),
    sa.Column('poste', sa.String(length=100), nullable=False, comment="Poste occupé par l'employé"),
    sa.Column('date_embauche', sa.Date(), nullable=False, comment="Date d'embauche de l'employé"),
    sa.Column('date_fin_contrat', sa.Date(), nullable=True, comment='Date de fin de contrat (si applicable)'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero_securite_sociale')
    )
    op.create_table('epi',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment="Nom de l'EPI"),
    sa.Column('description', sa.Text(), nullable=True, comment="Description de l'EPI"),
    sa.Column('categorie', sa.String(length=50), nullable=False, comment="Catégorie de l'EPI"),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fournisseurs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment='Nom du fournisseur'),
    sa.Column('contact', sa.String(length=100), nullable=True, comment='Contact principal du fournisseur'),
    sa.Column('email', sa.String(length=150), nullable=True, comment='Email du fournisseur'),
    sa.Column('telephone', sa.String(length=50), nullable=True, comment='Téléphone du fournisseur'),
    sa.Column('adresse', sa.String(length=255), nullable=True, comment='Adresse du fournisseur'),
    sa.Column('tva', sa.String(length=50), nullable=True, comment='Numéro de TVA du fournisseur'),
    sa.Column('site_web', sa.String(length=255), nullable=True, comment='Site web du fournisseur'),
    sa.Column('catalogue_interactif', sa.String(length=255), nullable=True, comment='URL ou fichier PDF du catalogue interactif'),
    sa.Column('date_creation', sa.DateTime(), nullable=False, comment='Date de création du fournisseur'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs_securite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('evenement', sa.String(length=100), nullable=False, comment="Type d'événement de sécurité"),
    sa.Column('description', sa.Text(), nullable=True, comment="Description détaillée de l'événement"),
    sa.Column('niveau', sa.String(length=50), nullable=False, comment="Niveau de l'événement (INFO, WARNING, ERROR)"),
    sa.Column('timestamp', sa.DateTime(), nullable=False, comment="Date et heure de l'événement"),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_logs_securite_id'), 'logs_securite', ['id'], unique=False)
    op.create_table('machines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment='Nom unique de la machine'),
    sa.Column('type_machine', sa.String(length=50), nullable=False, comment='Type de la machine (ex: CNC, imprimante 3D)'),
    sa.Column('vitesse_max', sa.Float(), nullable=True, comment='Vitesse maximale de la machine'),
    sa.Column('puissance', sa.Float(), nullable=True, comment='Puissance de la machine (en kW)'),
    sa.Column('nb_axes', sa.Integer(), nullable=True, comment="Nombre d'axes de la machine"),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Date de création de la machine'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Date de dernière mise à jour de la machine'),
    sa.CheckConstraint("type_machine IN ('CNC', 'Imprimante 3D', 'Tour', 'Fraiseuse')", name='check_type_machine'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_machines_nom'), 'machines', ['nom'], unique=True)
    op.create_index(op.f('ix_machines_type_machine'), 'machines', ['type_machine'], unique=False)
    op.create_table('robotique',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom_robot', sa.String(length=100), nullable=False, comment='Nom du robot'),
    sa.Column('fonction', sa.String(length=100), nullable=False, comment='Fonction du robot'),
    sa.Column('statut', sa.String(length=50), nullable=False, comment='Statut du robot (actif, inactif, etc.)'),
    sa.Column('affectation', sa.String(length=255), nullable=True, comment='Affectation du robot'),
    sa.Column('date_ajout', sa.DateTime(), nullable=False, comment="Date d'ajout du robot"),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surveillance_cameras',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment='Nom de la caméra'),
    sa.Column('emplacement', sa.String(length=255), nullable=False, comment='Emplacement de la caméra'),
    sa.Column('ip_address', sa.String(length=50), nullable=False, comment='Adresse IP de la caméra'),
    sa.Column('statut', sa.String(length=50), nullable=False, comment='Statut de la caméra (active, inactive, en maintenance)'),
    sa.Column('date_installation', sa.DateTime(), nullable=False, comment="Date d'installation de la caméra"),
    sa.Column('description', sa.Text(), nullable=True, comment='Description ou remarques sur la caméra'),
    sa.Column('enregistrement_actif', sa.Boolean(), nullable=True, comment="Indique si l'enregistrement est actif"),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address')
    )
    op.create_table('utilisateurs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('mot_de_passe', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('actif', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_utilisateurs_email'), 'utilisateurs', ['email'], unique=True)
    op.create_table('absences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('date_debut', sa.DateTime(), nullable=True),
    sa.Column('date_fin', sa.DateTime(), nullable=True),
    sa.Column('type_absence', sa.String(length=100), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('affectations_machines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False, comment='ID de la machine associée'),
    sa.Column('utilisateur_id', sa.Integer(), nullable=False, comment="ID de l'utilisateur associé"),
    sa.Column('date_affectation', sa.DateTime(), nullable=False, comment="Date d'affectation"),
    sa.Column('tache', sa.Text(), nullable=True, comment="Tâche associée à l'affectation"),
    sa.Column('statut', sa.String(length=50), nullable=False, comment="Statut de l'affectation (Actif, Terminé)"),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audits_qualite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('responsable_utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('date_audit', sa.DateTime(), nullable=False),
    sa.Column('type_audit', sa.String(length=100), nullable=False),
    sa.Column('resultat', sa.String(length=50), nullable=False),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['responsable_utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('controle_robot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('robot_id', sa.Integer(), nullable=False, comment='ID du robot contrôlé'),
    sa.Column('action', sa.String(length=255), nullable=False, comment='Action effectuée par le robot (ex: soudage, assemblage)'),
    sa.Column('statut', sa.String(length=100), nullable=True, comment="Statut de l'action (ex: réussie, échouée, en cours)"),
    sa.Column('date_execution', sa.DateTime(), nullable=False, comment="Date et heure d'exécution de l'action"),
    sa.Column('remarque', sa.Text(), nullable=True, comment="Remarques ou observations sur l'action effectuée"),
    sa.ForeignKeyConstraint(['robot_id'], ['robotique.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('devis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False, comment='ID du client associé'),
    sa.Column('montant_total', sa.Float(), nullable=False, comment='Montant total du devis'),
    sa.Column('date_creation', sa.DateTime(), nullable=True, comment='Date de création du devis'),
    sa.Column('date_livraison_souhaitee', sa.DateTime(), nullable=True, comment='Date de livraison souhaitée'),
    sa.Column('statut', sa.String(length=50), nullable=False, comment='Statut du devis (brouillon, validé, annulé)'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents_rh',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('nom_document', sa.String(length=150), nullable=False),
    sa.Column('type_document', sa.String(length=100), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('date_expiration', sa.DateTime(), nullable=True),
    sa.Column('fichier', sa.String(length=255), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('droits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('module', sa.String(length=100), nullable=True),
    sa.Column('autorisation', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entretiens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('type_entretien', sa.String(length=100), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('resume', sa.Text(), nullable=True),
    sa.Column('actions_prevues', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('epis_utilisateur',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('nom_epi', sa.String(length=150), nullable=False),
    sa.Column('date_attribution', sa.String(length=50), nullable=True),
    sa.Column('date_retour', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluations_fournisseurs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fournisseur_id', sa.Integer(), nullable=False, comment='ID du fournisseur évalué'),
    sa.Column('date_evaluation', sa.DateTime(), nullable=False, comment="Date de l'évaluation"),
    sa.Column('note', sa.Float(), nullable=False, comment='Note attribuée au fournisseur (ex: 4.5 sur 5)'),
    sa.Column('commentaire', sa.Text(), nullable=True, comment='Commentaire ou retour sur le fournisseur'),
    sa.Column('critere', sa.String(length=100), nullable=False, comment="Critère d'évaluation (ex: qualité, délai, prix)"),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('formations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('nom', sa.String(length=150), nullable=True),
    sa.Column('organisme', sa.String(length=150), nullable=True),
    sa.Column('date_debut', sa.DateTime(), nullable=True),
    sa.Column('date_fin', sa.DateTime(), nullable=True),
    sa.Column('certification', sa.String(length=150), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gestion_acces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('niveau_acces', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ia_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_execution', sa.DateTime(), nullable=False, comment="Date et heure de l'exécution de l'IA"),
    sa.Column('module', sa.String(length=100), nullable=False, comment='Nom du module ou composant IA'),
    sa.Column('action', sa.String(length=255), nullable=False, comment="Action ou décision prise par l'IA"),
    sa.Column('resultat', sa.Text(), nullable=True, comment="Résultat ou sortie de l'IA"),
    sa.Column('score_confiance', sa.Float(), nullable=True, comment='Score de confiance associé à la décision'),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True, comment="ID de l'utilisateur associé à l'action (si applicable)"),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_date_execution', 'ia_logs', ['date_execution'], unique=False)
    op.create_index('idx_module', 'ia_logs', ['module'], unique=False)
    op.create_table('instruments_controle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment="Nom de l'instrument"),
    sa.Column('type_instrument', sa.String(length=50), nullable=False, comment="Type d'instrument (pied à coulisse, micromètre, etc.)"),
    sa.Column('numero_serie', sa.String(length=100), nullable=False, comment="Numéro de série de l'instrument"),
    sa.Column('date_calibration', sa.DateTime(), nullable=False, comment='Date de calibration'),
    sa.Column('date_prochaine_calibration', sa.DateTime(), nullable=False, comment='Date de la prochaine calibration'),
    sa.Column('statut', sa.String(length=50), nullable=False, comment="Statut de l'instrument (conforme, non conforme)"),
    sa.Column('emplacement_id', sa.Integer(), nullable=True, comment="ID de l'emplacement associé"),
    sa.ForeignKeyConstraint(['emplacement_id'], ['emplacements.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero_serie')
    )
    op.create_table('maintenances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False, comment='ID de la machine associée'),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True, comment="ID de l'utilisateur responsable"),
    sa.Column('type_maintenance', sa.String(length=50), nullable=False, comment='Type de maintenance (préventive, corrective, prédictive)'),
    sa.Column('date_planifiee', sa.DateTime(), nullable=False, comment='Date planifiée pour la maintenance'),
    sa.Column('date_reelle', sa.DateTime(), nullable=True, comment='Date réelle de réalisation de la maintenance'),
    sa.Column('statut', sa.String(length=50), nullable=False, comment='Statut de la maintenance (planifiée, en cours, réalisée)'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description de la maintenance'),
    sa.Column('remarques', sa.Text(), nullable=True, comment='Remarques supplémentaires'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment="Date de création de l'enregistrement"),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment="Date de dernière mise à jour de l'enregistrement"),
    sa.CheckConstraint("statut IN ('planifiée', 'en cours', 'réalisée')", name='check_statut_maintenance'),
    sa.CheckConstraint("type_maintenance IN ('préventive', 'corrective', 'prédictive')", name='check_type_maintenance'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('materiaux',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment='Nom du matériau'),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('afnor', sa.String(length=100), nullable=True),
    sa.Column('stock', sa.Float(), nullable=False, comment='Quantité en stock (en kg)'),
    sa.Column('durete', sa.String(length=100), nullable=True),
    sa.Column('certificat', sa.String(length=255), nullable=True, comment='Certificat du matériau (chemin ou numéro)'),
    sa.Column('fournisseur_id', sa.Integer(), nullable=True, comment='ID du fournisseur associé'),
    sa.Column('emplacement_id', sa.Integer(), nullable=True, comment="ID de l'emplacement associé"),
    sa.Column('est_aeronautique', sa.Boolean(), nullable=True, comment="Indique si le matériau est certifié pour l'aéronautique"),
    sa.Column('certificat_matiere', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['emplacement_id'], ['emplacements.id'], ),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('metrics_machine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False, comment='ID de la machine associée'),
    sa.Column('timestamp', sa.DateTime(), nullable=False, comment='Horodatage des métriques'),
    sa.Column('temperature', sa.Float(), nullable=True, comment='Température de la machine (en °C)'),
    sa.Column('vibration', sa.Float(), nullable=True, comment='Niveau de vibration de la machine'),
    sa.Column('charge', sa.Float(), nullable=True, comment='Charge de la machine (en %)'),
    sa.CheckConstraint('charge >= 0 AND charge <= 100', name='check_charge_range'),
    sa.CheckConstraint('temperature >= -50 AND temperature <= 150', name='check_temperature_range'),
    sa.CheckConstraint('vibration >= 0 AND vibration <= 100', name='check_vibration_range'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_metrics_machine_machine_id'), 'metrics_machine', ['machine_id'], unique=False)
    op.create_index(op.f('ix_metrics_machine_timestamp'), 'metrics_machine', ['timestamp'], unique=False)
    op.create_table('notations_rh',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('date_evaluation', sa.DateTime(), nullable=True),
    sa.Column('note', sa.Float(), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('outils',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment="Nom de l'outil"),
    sa.Column('type', sa.String(length=50), nullable=False, comment="Type de l'outil (ex: fraise, foret)"),
    sa.Column('stock', sa.Integer(), nullable=False, comment='Quantité en stock'),
    sa.Column('etat', sa.String(length=50), nullable=False, comment="État de l'outil (neuf, utilisé, cassé)"),
    sa.Column('diametre', sa.Float(), nullable=True, comment="Diamètre de l'outil (en mm)"),
    sa.Column('longueur', sa.Float(), nullable=True, comment="Longueur de l'outil (en mm)"),
    sa.Column('rayon', sa.Float(), nullable=True, comment='Rayon de la plaquette (en mm)'),
    sa.Column('fournisseur_id', sa.Integer(), nullable=True, comment='ID du fournisseur associé'),
    sa.Column('emplacement_id', sa.Integer(), nullable=True, comment="ID de l'emplacement associé"),
    sa.Column('ref_fournisseur', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['emplacement_id'], ['emplacements.id'], ),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pieces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment='Nom de la pièce (max 100 caractères)'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description de la pièce (optionnelle)'),
    sa.Column('date_creation', sa.DateTime(), nullable=False, comment='Date de création de la pièce'),
    sa.Column('client_id', sa.Integer(), nullable=True, comment='ID du client associé'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pieces_client_id'), 'pieces', ['client_id'], unique=False)
    op.create_table('planning_employes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=False, comment="ID de l'utilisateur associé"),
    sa.Column('machine_id', sa.Integer(), nullable=True, comment='ID de la machine associée'),
    sa.Column('date_debut', sa.DateTime(), nullable=False, comment='Date de début de la tâche'),
    sa.Column('date_fin', sa.DateTime(), nullable=False, comment='Date de fin de la tâche'),
    sa.Column('tache', sa.Text(), nullable=False, comment='Description de la tâche'),
    sa.Column('statut', sa.String(length=50), nullable=False, comment='Statut de la tâche (Prévu, En cours, Terminé)'),
    sa.Column('affectation_auto', sa.Boolean(), nullable=True, comment="Indique si l'affectation est automatique"),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('postprocesseurs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False, comment='Nom du postprocesseur'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description du postprocesseur'),
    sa.Column('version', sa.String(length=50), nullable=True, comment='Version du postprocesseur'),
    sa.Column('logiciel_fao', sa.String(length=100), nullable=False, comment='Logiciel FAO associé (ex: SolidCAM, TopSolid)'),
    sa.Column('extension_sortie', sa.String(length=20), nullable=False, comment='Extension de fichier générée (ex: .nc, .txt)'),
    sa.Column('configuration', sa.Text(), nullable=True, comment='Configuration brute du post-processeur (JSON ou texte)'),
    sa.Column('machine_id', sa.Integer(), nullable=False, comment='ID de la machine associée'),
    sa.Column('date_creation', sa.DateTime(), nullable=False, comment='Date de création du post-processeur'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Date de dernière mise à jour du post-processeur'),
    sa.CheckConstraint("extension_sortie IN ('.nc', '.txt', '.tap', '.gcode')", name='check_extension_sortie'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('qr_codes_objets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('objet_type', sa.String(length=50), nullable=False, comment="Type de l'objet associé (ex: machine, pièce, outil)"),
    sa.Column('objet_id', sa.Integer(), nullable=False, comment="ID de l'objet associé"),
    sa.Column('contenu', sa.Text(), nullable=False, comment='Contenu encodé dans le QR code'),
    sa.Column('date_creation', sa.DateTime(), nullable=False, comment='Date de création du QR code'),
    sa.Column('date_expiration', sa.DateTime(), nullable=True, comment="Date d'expiration du QR code"),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True, comment="ID de l'utilisateur ayant généré le QR code"),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rh',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('poste', sa.String(length=100), nullable=True),
    sa.Column('contrat', sa.String(length=100), nullable=True),
    sa.Column('temps_travail', sa.Float(), nullable=True),
    sa.Column('est_cadre', sa.Boolean(), nullable=True),
    sa.Column('date_debut', sa.DateTime(), nullable=True),
    sa.Column('salaire_brut', sa.Float(), nullable=True),
    sa.Column('statut_administratif', sa.String(length=100), nullable=True),
    sa.Column('remarques', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sanctions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('type_sanction', sa.String(length=150), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('motif', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stat_production',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('periode', sa.String(length=20), nullable=False, comment='Période de la statistique (ex: 2025-04)'),
    sa.Column('type_stat', sa.String(length=50), nullable=False, comment='Type de statistique (efficacité, rendement, etc.)'),
    sa.Column('valeur', sa.Float(), nullable=False, comment='Valeur de la statistique'),
    sa.Column('unite', sa.String(length=20), nullable=True, comment='Unité de la statistique (ex: %, heures, pièces)'),
    sa.Column('date_calcul', sa.DateTime(), nullable=False, comment='Date de calcul de la statistique'),
    sa.Column('machine_id', sa.Integer(), nullable=True, comment='ID de la machine associée'),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True, comment="ID de l'utilisateur associé"),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stat_rh',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('periode', sa.String(length=20), nullable=False, comment='Période de la statistique (ex: 2025-04)'),
    sa.Column('type_stat', sa.String(length=50), nullable=False, comment='Type de statistique (absences, formations, etc.)'),
    sa.Column('valeur', sa.Float(), nullable=False, comment='Valeur de la statistique'),
    sa.Column('unite', sa.String(length=20), nullable=True, comment='Unité de la statistique (ex: jours, heures, pourcentage)'),
    sa.Column('date_calcul', sa.DateTime(), nullable=False, comment='Date de calcul de la statistique'),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True, comment="ID de l'utilisateur associé"),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commandes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False, comment='ID du client associé'),
    sa.Column('devis_id', sa.Integer(), nullable=True, comment='ID du devis associé'),
    sa.Column('date_validation', sa.DateTime(), nullable=False, comment='Date de validation de la commande'),
    sa.Column('statut', sa.String(length=50), nullable=False, comment='Statut de la commande (en cours, terminée, annulée)'),
    sa.Column('date_creation', sa.DateTime(), nullable=False, comment='Date de création de la commande'),
    sa.CheckConstraint("statut IN ('en cours', 'terminée', 'annulée')", name='check_statut_commande'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['devis_id'], ['devis.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('controle_piece',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('piece_id', sa.Integer(), nullable=False, comment='ID de la pièce contrôlée'),
    sa.Column('instrument_id', sa.Integer(), nullable=True, comment="ID de l'instrument utilisé pour le contrôle"),
    sa.Column('resultat', sa.String(length=100), nullable=False, comment='Résultat du contrôle (ex: conforme, non conforme)'),
    sa.Column('date_controle', sa.DateTime(), nullable=False, comment='Date et heure du contrôle'),
    sa.Column('remarque', sa.Text(), nullable=True, comment='Remarques ou observations sur le contrôle'),
    sa.CheckConstraint("resultat IN ('conforme', 'non conforme')", name='check_resultat_controle_piece'),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments_controle.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('droits_acces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('droit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['droit_id'], ['droits.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gammes_production',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('piece_id', sa.Integer(), nullable=False, comment='ID de la pièce associée'),
    sa.Column('machine_id', sa.Integer(), nullable=True, comment='ID de la machine associée'),
    sa.Column('operation', sa.String(length=100), nullable=False, comment="Nom de l'opération"),
    sa.Column('temps_estime', sa.Float(), nullable=False, comment="Temps estimé pour l'opération (en heures)"),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('machine_outil',
    sa.Column('machine_id', sa.Integer(), nullable=False, comment='ID de la machine associée'),
    sa.Column('outil_id', sa.Integer(), nullable=False, comment="ID de l'outil associé"),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['outil_id'], ['outils.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('machine_id', 'outil_id')
    )
    op.create_table('non_conformites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origine', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('action_corrective', sa.Text(), nullable=True),
    sa.Column('date_detection', sa.DateTime(), nullable=False),
    sa.Column('date_resolution', sa.DateTime(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=False),
    sa.Column('detecte_par_ia', sa.Boolean(), nullable=True),
    sa.Column('utilisateur_id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('materiau_id', sa.Integer(), nullable=True),
    sa.Column('outil_id', sa.Integer(), nullable=True),
    sa.Column('instrument_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments_controle.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['materiau_id'], ['materiaux.id'], ),
    sa.ForeignKeyConstraint(['outil_id'], ['outils.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('production',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('piece_id', sa.Integer(), nullable=False, comment='ID de la pièce produite'),
    sa.Column('machine_id', sa.Integer(), nullable=True, comment='ID de la machine utilisée pour la production'),
    sa.Column('employe_id', sa.Integer(), nullable=True, comment="ID de l'employé responsable de la production"),
    sa.Column('date_debut', sa.DateTime(), nullable=False, comment='Date de début de la production'),
    sa.Column('date_fin', sa.DateTime(), nullable=True, comment='Date de fin de la production'),
    sa.Column('statut', sa.String(length=50), nullable=False, comment='Statut de la production (en cours, terminée, annulée)'),
    sa.CheckConstraint("statut IN ('en cours', 'terminée', 'annulée')", name='check_statut_production'),
    sa.ForeignKeyConstraint(['employe_id'], ['employes.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Table des productions'
    )
    op.create_index(op.f('ix_production_piece_id'), 'production', ['piece_id'], unique=False)
    op.create_table('programme_pieces',
    sa.Column('id', sa.Integer(), nullable=False, comment='Identifiant unique du programme'),
    sa.Column('piece_id', sa.Integer(), nullable=False, comment='ID de la pièce associée'),
    sa.Column('nom_programme', sa.String(length=150), nullable=False, comment='Nom du programme'),
    sa.Column('fichier_path', sa.String(length=255), nullable=False, comment='Chemin du fichier sur disque'),
    sa.Column('postprocesseur_id', sa.Integer(), nullable=False, comment='ID du post-processeur associé'),
    sa.Column('date_import', sa.DateTime(), nullable=False, comment="Date d'importation du programme"),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], ),
    sa.ForeignKeyConstraint(['postprocesseur_id'], ['postprocesseurs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('piece_id', 'nom_programme', name='uq_piece_nom_programme')
    )
    op.create_index(op.f('ix_programme_pieces_id'), 'programme_pieces', ['id'], unique=False)
    op.create_index(op.f('ix_programme_pieces_piece_id'), 'programme_pieces', ['piece_id'], unique=False)
    op.create_index(op.f('ix_programme_pieces_postprocesseur_id'), 'programme_pieces', ['postprocesseur_id'], unique=False)
    op.create_table('analyse_fichiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_fichier', sa.String(length=100), nullable=False, comment='Type du fichier analysé (ex: CSV, JSON, XML)'),
    sa.Column('contenu', sa.Text(), nullable=False, comment="Contenu brut ou résultat de l'analyse du fichier"),
    sa.Column('date_analyse', sa.DateTime(), nullable=False, comment="Date de l'analyse"),
    sa.Column('machine_id', sa.Integer(), nullable=True, comment='ID de la machine associée (si applicable)'),
    sa.Column('piece_id', sa.Integer(), nullable=True, comment='ID de la pièce associée (si applicable)'),
    sa.Column('programme_id', sa.Integer(), nullable=True, comment='ID du programme associé (si applicable)'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['programme_id'], ['programme_pieces.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('charges_machine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.Column('gamme_id', sa.Integer(), nullable=True),
    sa.Column('date_debut', sa.DateTime(), nullable=False),
    sa.Column('date_fin', sa.DateTime(), nullable=False),
    sa.Column('statut', sa.String(length=50), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True, comment='Température mesurée'),
    sa.Column('vibration', sa.Float(), nullable=True, comment='Vibration mesurée'),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commande_pieces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('commande_id', sa.Integer(), nullable=False, comment='ID de la commande associée'),
    sa.Column('piece_id', sa.Integer(), nullable=False, comment='ID de la pièce associée'),
    sa.Column('quantite', sa.Integer(), nullable=False, comment='Quantité commandée'),
    sa.Column('prix_unitaire', sa.Float(), nullable=False, comment='Prix unitaire de la pièce'),
    sa.ForeignKeyConstraint(['commande_id'], ['commandes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('factures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('commande_id', sa.Integer(), nullable=False, comment='ID de la commande associée'),
    sa.Column('montant_total', sa.Float(), nullable=False, comment='Montant total de la facture'),
    sa.Column('date_emission', sa.DateTime(), nullable=False, comment="Date d'émission de la facture"),
    sa.Column('statut', sa.String(length=50), nullable=False, comment='Statut de la facture (payée, impayée, annulée)'),
    sa.CheckConstraint("statut IN ('En attente', 'Validée', 'Payée', 'Annulée')", name='check_statut_facture'),
    sa.ForeignKeyConstraint(['commande_id'], ['commandes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gestion_filtrage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filtre', sa.String(length=100), nullable=False, comment='Nom du filtre'),
    sa.Column('valeur', sa.String(length=255), nullable=False, comment='Valeur associée au filtre'),
    sa.Column('actif', sa.Boolean(), nullable=True, comment='Indique si le filtre est actif'),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('commande_id', sa.Integer(), nullable=True),
    sa.Column('fournisseur_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['commande_id'], ['commandes.id'], ),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gestion_filtrage_id'), 'gestion_filtrage', ['id'], unique=False)
    op.create_table('planning_machines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False, comment='ID de la machine associée'),
    sa.Column('date_debut', sa.DateTime(), nullable=False, comment="Date de début de l'opération"),
    sa.Column('date_fin', sa.DateTime(), nullable=False, comment="Date de fin de l'opération"),
    sa.Column('operation', sa.Text(), nullable=False, comment="Description de l'opération"),
    sa.Column('statut', sa.String(length=50), nullable=False, comment="Statut de l'opération (Prévu, En cours, Terminé)"),
    sa.Column('charge_estimee', sa.Float(), nullable=True, comment="Charge estimée pour l'opération (en heures)"),
    sa.Column('gamme_id', sa.Integer(), nullable=True, comment='ID de la gamme de production associée'),
    sa.Column('optimise_par_ia', sa.Boolean(), nullable=True, comment="Indique si l'opération est optimisée par IA"),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pointages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=False, comment="ID de l'utilisateur associé"),
    sa.Column('machine_id', sa.Integer(), nullable=True, comment='ID de la machine associée'),
    sa.Column('gamme_id', sa.Integer(), nullable=True, comment='ID de la gamme de production associée'),
    sa.Column('date_pointage', sa.DateTime(), nullable=False, comment='Date du pointage'),
    sa.Column('heure_debut', sa.DateTime(), nullable=False, comment='Heure de début'),
    sa.Column('heure_fin', sa.DateTime(), nullable=True, comment='Heure de fin'),
    sa.Column('duree_effective', sa.Float(), nullable=True, comment='Durée effective (en heures)'),
    sa.Column('remarques', sa.Text(), nullable=True, comment='Remarques sur le pointage'),
    sa.CheckConstraint('heure_fin IS NULL OR heure_fin >= heure_debut', name='check_pointage_heure'),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tracabilite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('piece_id', sa.Integer(), nullable=False, comment='ID de la pièce tracée'),
    sa.Column('operation', sa.String(length=255), nullable=False, comment='Opération effectuée sur la pièce'),
    sa.Column('date_operation', sa.DateTime(), nullable=False, comment="Date de l'opération"),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True, comment="ID de l'utilisateur ayant effectué l'opération"),
    sa.Column('gamme_id', sa.Integer(), nullable=True, comment='ID de la gamme de production'),
    sa.Column('date', sa.DateTime(), nullable=True, comment="Date de l'enregistrement"),
    sa.Column('remarque', sa.Text(), nullable=True, comment="Remarque associée à l'enregistrement"),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], ),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('finance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_transaction', sa.String(length=50), nullable=False, comment='Type de transaction (revenu, dépense)'),
    sa.Column('categorie', sa.String(length=100), nullable=True, comment='Catégorie de la transaction'),
    sa.Column('sous_categorie', sa.String(length=100), nullable=True, comment='Sous-catégorie de la transaction'),
    sa.Column('montant', sa.Float(), nullable=False, comment='Montant de la transaction'),
    sa.Column('devise', sa.String(length=10), nullable=False, comment='Devise utilisée'),
    sa.Column('date_transaction', sa.DateTime(), nullable=False, comment='Date de la transaction'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description de la transaction'),
    sa.Column('statut', sa.String(length=50), nullable=False, comment='Statut de la transaction (validé, rejeté, etc.)'),
    sa.Column('moyen_paiement', sa.String(length=50), nullable=True, comment='Moyen de paiement utilisé'),
    sa.Column('reference_facture', sa.String(length=100), nullable=True, comment='Référence de la facture associée'),
    sa.Column('utilisateur_id', sa.Integer(), nullable=False, comment="ID de l'utilisateur associé"),
    sa.Column('fournisseur_id', sa.Integer(), nullable=True, comment='ID du fournisseur associé'),
    sa.Column('materiau_id', sa.Integer(), nullable=True, comment='ID du matériau associé'),
    sa.Column('piece_id', sa.Integer(), nullable=True, comment='ID de la pièce associée'),
    sa.Column('instrument_id', sa.Integer(), nullable=True, comment="ID de l'instrument de contrôle associé"),
    sa.Column('outil_id', sa.Integer(), nullable=True, comment="ID de l'outil associé"),
    sa.Column('machine_id', sa.Integer(), nullable=True, comment='ID de la machine associée'),
    sa.Column('facture_id', sa.Integer(), nullable=True, comment='ID de la facture associée'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Date de création'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Date de dernière mise à jour'),
    sa.ForeignKeyConstraint(['facture_id'], ['factures.id'], ),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments_controle.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['materiau_id'], ['materiaux.id'], ),
    sa.ForeignKeyConstraint(['outil_id'], ['outils.id'], ),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ligne_factures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('facture_id', sa.Integer(), nullable=False, comment='ID de la facture associée'),
    sa.Column('description', sa.Text(), nullable=False, comment='Description de la ligne de facture'),
    sa.Column('quantite', sa.Integer(), nullable=False, comment='Quantité facturée'),
    sa.Column('prix_unitaire', sa.Float(), nullable=False, comment='Prix unitaire'),
    sa.Column('total', sa.Float(), nullable=False, comment='Total de la ligne (quantité * prix unitaire)'),
    sa.ForeignKeyConstraint(['facture_id'], ['factures.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ligne_factures')
    op.drop_table('finance')
    op.drop_table('tracabilite')
    op.drop_table('pointages')
    op.drop_table('planning_machines')
    op.drop_index(op.f('ix_gestion_filtrage_id'), table_name='gestion_filtrage')
    op.drop_table('gestion_filtrage')
    op.drop_table('factures')
    op.drop_table('commande_pieces')
    op.drop_table('charges_machine')
    op.drop_table('analyse_fichiers')
    op.drop_index(op.f('ix_programme_pieces_postprocesseur_id'), table_name='programme_pieces')
    op.drop_index(op.f('ix_programme_pieces_piece_id'), table_name='programme_pieces')
    op.drop_index(op.f('ix_programme_pieces_id'), table_name='programme_pieces')
    op.drop_table('programme_pieces')
    op.drop_index(op.f('ix_production_piece_id'), table_name='production')
    op.drop_table('production')
    op.drop_table('non_conformites')
    op.drop_table('machine_outil')
    op.drop_table('gammes_production')
    op.drop_table('droits_acces')
    op.drop_table('controle_piece')
    op.drop_table('commandes')
    op.drop_table('stat_rh')
    op.drop_table('stat_production')
    op.drop_table('sanctions')
    op.drop_table('rh')
    op.drop_table('qr_codes_objets')
    op.drop_table('postprocesseurs')
    op.drop_table('planning_employes')
    op.drop_index(op.f('ix_pieces_client_id'), table_name='pieces')
    op.drop_table('pieces')
    op.drop_table('outils')
    op.drop_table('notations_rh')
    op.drop_index(op.f('ix_metrics_machine_timestamp'), table_name='metrics_machine')
    op.drop_index(op.f('ix_metrics_machine_machine_id'), table_name='metrics_machine')
    op.drop_table('metrics_machine')
    op.drop_table('materiaux')
    op.drop_table('maintenances')
    op.drop_table('instruments_controle')
    op.drop_index('idx_module', table_name='ia_logs')
    op.drop_index('idx_date_execution', table_name='ia_logs')
    op.drop_table('ia_logs')
    op.drop_table('gestion_acces')
    op.drop_table('formations')
    op.drop_table('evaluations_fournisseurs')
    op.drop_table('epis_utilisateur')
    op.drop_table('entretiens')
    op.drop_table('droits')
    op.drop_table('documents_rh')
    op.drop_table('devis')
    op.drop_table('controle_robot')
    op.drop_table('audits_qualite')
    op.drop_table('affectations_machines')
    op.drop_table('absences')
    op.drop_index(op.f('ix_utilisateurs_email'), table_name='utilisateurs')
    op.drop_table('utilisateurs')
    op.drop_table('surveillance_cameras')
    op.drop_table('robotique')
    op.drop_index(op.f('ix_machines_type_machine'), table_name='machines')
    op.drop_index(op.f('ix_machines_nom'), table_name='machines')
    op.drop_table('machines')
    op.drop_index(op.f('ix_logs_securite_id'), table_name='logs_securite')
    op.drop_table('logs_securite')
    op.drop_table('fournisseurs')
    op.drop_table('epi')
    op.drop_table('employes')
    op.drop_table('emplacements')
    op.drop_table('documents_reglementaires')
    op.drop_table('documents_qualite')
    op.drop_table('documents_qhse')
    op.drop_table('clients')
    # ### end Alembic commands ###
