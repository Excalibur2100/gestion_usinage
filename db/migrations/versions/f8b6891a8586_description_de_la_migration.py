"""Description de la migration

Revision ID: f8b6891a8586
Revises: 0d269123c74c
Create Date: 2025-04-06 12:17:51.315164

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f8b6891a8586'
down_revision: Union[str, None] = '0d269123c74c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('planning_machine')
    op.drop_table('evaluations_fournisseur')
    op.drop_table('controle_piece')
    op.drop_table('absences')
    op.drop_table('materiaux')
    op.drop_table('affectation_machine')
    op.drop_table('documents_qualite')
    op.drop_table('commande_pieces')
    op.drop_index('ix_gestion_filtrage_id', table_name='gestion_filtrage')
    op.drop_table('gestion_filtrage')
    op.drop_table('gammes_production')
    op.drop_table('stat_finance')
    op.drop_table('droits_acces')
    op.drop_table('fournisseurs')
    op.drop_table('qhse')
    op.drop_table('outils')
    op.drop_index('ix_controle_robot_id', table_name='controle_robot')
    op.drop_table('controle_robot')
    op.drop_table('stat_rh')
    op.drop_table('postprocesseurs')
    op.drop_table('devis')
    op.drop_table('rh')
    op.drop_table('machine_outil')
    op.drop_table('pieces')
    op.drop_table('tracabilite')
    op.drop_table('clients')
    op.drop_table('sanctions')
    op.drop_table('notations_rh')
    op.drop_table('robotique')
    op.drop_table('documents_reglementaires')
    op.drop_table('formations')
    op.drop_index('ix_surveillance_cameras_id', table_name='surveillance_cameras')
    op.drop_table('surveillance_cameras')
    op.drop_table('qr_codes')
    op.drop_table('instruments_controle')
    op.drop_table('epi')
    op.drop_table('pointages')
    op.drop_index('ix_machines_id', table_name='machines')
    op.drop_table('machines')
    op.drop_table('lignes_facture')
    op.drop_table('historique_actions')
    op.drop_table('planning_employe')
    op.drop_table('finance')
    op.drop_table('droits')
    op.drop_index('ix_metrics_machine_id', table_name='metrics_machine')
    op.drop_table('metrics_machine')
    op.drop_table('charges_machine')
    op.drop_table('programmes_piece')
    op.drop_table('non_conformites')
    op.drop_table('epi_utilisateur')
    op.drop_table('gestion_acces')
    op.drop_table('maintenance')
    op.drop_table('documents_rh')
    op.drop_table('audits_qualite')
    op.drop_index('ix_analyse_fichiers_id', table_name='analyse_fichiers')
    op.drop_index('ix_analyse_fichiers_type_fichier', table_name='analyse_fichiers')
    op.drop_table('analyse_fichiers')
    op.drop_table('commandes')
    op.drop_table('entretiens')
    op.drop_table('documents_qhse')
    op.drop_table('utilisateurs')
    op.drop_table('stat_production')
    op.drop_table('factures')
    op.drop_table('ia_logs')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ia_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ia_logs_pkey')
    )
    op.create_table('factures',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('factures_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('numero_facture', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('commande_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_emission', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_echeance', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('montant_total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('mode_generation', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('valide_par', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('observations', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('code_statut', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='factures_client_id_fkey'),
    sa.ForeignKeyConstraint(['commande_id'], ['commandes.id'], name='factures_commande_id_fkey'),
    sa.ForeignKeyConstraint(['valide_par'], ['utilisateurs.id'], name='factures_valide_par_fkey'),
    sa.PrimaryKeyConstraint('id', name='factures_pkey'),
    sa.UniqueConstraint('numero_facture', name='factures_numero_facture_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('stat_production',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('periode', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('type_stat', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('valeur', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('unite', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('precision', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('date_calcul', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gamme_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], name='stat_production_gamme_id_fkey'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='stat_production_machine_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stat_production_pkey')
    )
    op.create_table('utilisateurs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('utilisateurs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('mot_de_passe', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('actif', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='utilisateurs_pkey'),
    sa.UniqueConstraint('email', name='utilisateurs_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('documents_qhse',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('titre', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('type_document', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('date_emission', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_expiration', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('fichier', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('visible', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('categorie', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='documents_qhse_pkey')
    )
    op.create_table('entretiens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type_entretien', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('resume', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('actions_prevues', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='entretiens_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='entretiens_pkey')
    )
    op.create_table('commandes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('commandes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('date_commande', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('bon_commande_client', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('forcer_creation', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('code_statut', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='commandes_client_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='commandes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('analyse_fichiers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type_fichier', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contenu', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='analyse_fichiers_pkey')
    )
    op.create_index('ix_analyse_fichiers_type_fichier', 'analyse_fichiers', ['type_fichier'], unique=False)
    op.create_index('ix_analyse_fichiers_id', 'analyse_fichiers', ['id'], unique=False)
    op.create_table('audits_qualite',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('type_audit', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('remarques', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('responsable', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents_qualite.id'], name='audits_qualite_document_id_fkey'),
    sa.ForeignKeyConstraint(['responsable'], ['utilisateurs.id'], name='audits_qualite_responsable_fkey'),
    sa.PrimaryKeyConstraint('id', name='audits_qualite_pkey')
    )
    op.create_table('documents_rh',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type_document', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('chemin_fichier', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('date_ajout', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='documents_rh_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='documents_rh_pkey')
    )
    op.create_table('maintenance',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type_maintenance', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('date_planifiee', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_reelle', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('operateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('remarques', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('planifie_par_ia', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='maintenance_machine_id_fkey'),
    sa.ForeignKeyConstraint(['operateur_id'], ['utilisateurs.id'], name='maintenance_operateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='maintenance_pkey')
    )
    op.create_table('gestion_acces',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('module', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('peut_lire', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('peut_ecrire', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('peut_supprimer', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('peut_valider', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='gestion_acces_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='gestion_acces_pkey')
    )
    op.create_table('epi_utilisateur',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('epi_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_distribution', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('quantite', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['epi_id'], ['epi.id'], name='epi_utilisateur_epi_id_fkey'),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='epi_utilisateur_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='epi_utilisateur_pkey')
    )
    op.create_table('non_conformites',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('origine', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('action_corrective', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_detection', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_resolution', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('materiau_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('outil_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('instrument_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('detecte_par_ia', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments_controle.id'], name='non_conformites_instrument_id_fkey'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='non_conformites_machine_id_fkey'),
    sa.ForeignKeyConstraint(['materiau_id'], ['materiaux.id'], name='non_conformites_materiau_id_fkey'),
    sa.ForeignKeyConstraint(['outil_id'], ['outils.id'], name='non_conformites_outil_id_fkey'),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='non_conformites_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='non_conformites_pkey')
    )
    op.create_table('programmes_piece',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('programmes_piece_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('piece_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('nom_programme', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('fichier_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('postprocesseur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_import', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], name='programmes_piece_piece_id_fkey'),
    sa.ForeignKeyConstraint(['postprocesseur_id'], ['postprocesseurs.id'], name='programmes_piece_postprocesseur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='programmes_piece_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('charges_machine',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('gamme_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_debut', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_fin', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('vibration', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], name='charges_machine_gamme_id_fkey'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='charges_machine_machine_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='charges_machine_pkey')
    )
    op.create_table('metrics_machine',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('vibration', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='metrics_machine_machine_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='metrics_machine_pkey')
    )
    op.create_index('ix_metrics_machine_id', 'metrics_machine', ['id'], unique=False)
    op.create_table('droits',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('module', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('autorisation', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='droits_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='droits_pkey')
    )
    op.create_table('finance',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('finance_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('type_transaction', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('montant', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('categorie', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('materiau_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fournisseur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('piece_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sous_categorie', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('devise', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('periode', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('moyen_paiement', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('code_statut', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('justificatif', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('type_justificatif', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('reference_facture', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('instrument_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('outil_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('facture_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['facture_id'], ['factures.id'], name='finance_facture_id_fkey'),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], name='finance_fournisseur_id_fkey'),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments_controle.id'], name='finance_instrument_id_fkey'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='finance_machine_id_fkey'),
    sa.ForeignKeyConstraint(['materiau_id'], ['materiaux.id'], name='finance_materiau_id_fkey'),
    sa.ForeignKeyConstraint(['outil_id'], ['outils.id'], name='finance_outil_id_fkey'),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], name='finance_piece_id_fkey'),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='finance_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='finance_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('planning_employe',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('plage_horaire', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('tache', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('affectation_auto', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='planning_employe_machine_id_fkey'),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='planning_employe_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='planning_employe_pkey')
    )
    op.create_table('historique_actions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_action', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('module', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='historique_actions_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='historique_actions_pkey')
    )
    op.create_table('lignes_facture',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('facture_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('quantite', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('prix_unitaire', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['facture_id'], ['factures.id'], name='lignes_facture_facture_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='lignes_facture_pkey')
    )
    op.create_table('machines',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machines_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('vitesse_max', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('puissance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('nb_axes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('axe_x_max', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('axe_y_max', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('axe_z_max', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('commande_numerique', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('logiciel_fao', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('temperature_max', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('vibration_max', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='machines_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_machines_id', 'machines', ['id'], unique=False)
    op.create_table('pointages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('gamme_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_pointage', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('heure_debut', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('heure_fin', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('duree_effective', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('remarques', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], name='pointages_gamme_id_fkey'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='pointages_machine_id_fkey'),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='pointages_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pointages_pkey')
    )
    op.create_table('epi',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('epi_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('stock', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('seuil_alerte', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='epi_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('instruments_controle',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('instruments_controle_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('type_instrument', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('date_calibrage', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('conforme_qhse', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('numero_serie', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('date_prochaine_calibration', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('en_service', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='instruments_controle_pkey'),
    sa.UniqueConstraint('numero_serie', name='instruments_controle_numero_serie_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('qr_codes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('objet_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('objet_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('qr_code_data', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('date_creation', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='qr_codes_pkey'),
    sa.UniqueConstraint('qr_code_data', name='qr_codes_qr_code_data_key')
    )
    op.create_table('surveillance_cameras',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('emplacement', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('actif', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='surveillance_cameras_pkey')
    )
    op.create_index('ix_surveillance_cameras_id', 'surveillance_cameras', ['id'], unique=False)
    op.create_table('formations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('nom', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('organisme', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('date_debut', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_fin', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('certification', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('commentaire', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='formations_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='formations_pkey')
    )
    op.create_table('documents_reglementaires',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('titre', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type_document', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('date_edition', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('valide_jusquau', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('fichier_stocke', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('conforme', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('norme_associee', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('categorie', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='documents_reglementaires_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='documents_reglementaires_pkey')
    )
    op.create_table('robotique',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('robotique_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom_robot', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('fonction', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('affectation', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='robotique_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('notations_rh',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_evaluation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('note', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('commentaire', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='notations_rh_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notations_rh_pkey')
    )
    op.create_table('sanctions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type_sanction', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('motif', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='sanctions_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sanctions_pkey')
    )
    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('clients_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('telephone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('adresse', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('siret', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('tva_intracom', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('secteur_activite', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('site_web', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('commentaire', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='clients_pkey'),
    sa.UniqueConstraint('email', name='clients_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tracabilite',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('gamme_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('remarque', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], name='tracabilite_gamme_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tracabilite_pkey')
    )
    op.create_table('pieces',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('pieces_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('numero_plan', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pieces_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('machine_outil',
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('outil_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='machine_outil_machine_id_fkey'),
    sa.ForeignKeyConstraint(['outil_id'], ['outils.id'], name='machine_outil_outil_id_fkey')
    )
    op.create_table('rh',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('poste', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('contrat', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('temps_travail', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('est_cadre', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_debut', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('statut_administratif', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('salaire_brut', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('remarques', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='rh_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='rh_pkey')
    )
    op.create_table('devis',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_devis', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('montant_total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('scenarios', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='devis_client_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='devis_pkey')
    )
    op.create_table('postprocesseurs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('postprocesseurs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('logiciel_fao', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('extension_sortie', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('configuration', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_creation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='postprocesseurs_machine_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='postprocesseurs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('stat_rh',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('periode', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('type_stat', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('departement', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('valeur', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('unite', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('precision', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('date_calcul', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='stat_rh_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stat_rh_pkey')
    )
    op.create_table('controle_robot',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('robot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('statut', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_execution', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['robot_id'], ['robotique.id'], name='controle_robot_robot_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='controle_robot_pkey')
    )
    op.create_index('ix_controle_robot_id', 'controle_robot', ['id'], unique=False)
    op.create_table('outils',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('outils_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('stock', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('en_stock', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('diametre', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longueur', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fournisseur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ref_fournisseur', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('catalogue_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], name='outils_fournisseur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='outils_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('qhse',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type_document', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('remarque', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('conformite', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('instrument_controle_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('epi_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('materiau_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['epi_id'], ['epi.id'], name='qhse_epi_id_fkey'),
    sa.ForeignKeyConstraint(['instrument_controle_id'], ['instruments_controle.id'], name='qhse_instrument_controle_id_fkey'),
    sa.ForeignKeyConstraint(['materiau_id'], ['materiaux.id'], name='qhse_materiau_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='qhse_pkey')
    )
    op.create_table('fournisseurs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('fournisseurs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('contact', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('telephone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('adresse', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('site_web', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('tva', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('catalogue_interactif', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='fournisseurs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('droits_acces',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('module', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('peut_lire', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('peut_creer', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('peut_modifier', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('peut_supprimer', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('acces_total', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='droits_acces_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='droits_acces_pkey')
    )
    op.create_table('stat_finance',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('periode', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('type_stat', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('categorie', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('sous_categorie', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('montant_total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('source_finance_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('devise', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('precision', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('date_calcul', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['source_finance_id'], ['finance.id'], name='stat_finance_source_finance_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stat_finance_pkey')
    )
    op.create_table('gammes_production',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('gammes_production_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('piece_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ordre', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('outil_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('operation', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('temps_prevu', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('temps_reel', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('materiau_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('moyen_controle', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('longueur_debit', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('nombre_debits', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('programme_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='gammes_production_machine_id_fkey'),
    sa.ForeignKeyConstraint(['materiau_id'], ['materiaux.id'], name='gammes_production_materiau_id_fkey'),
    sa.ForeignKeyConstraint(['outil_id'], ['outils.id'], name='gammes_production_outil_id_fkey'),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], name='gammes_production_piece_id_fkey'),
    sa.ForeignKeyConstraint(['programme_id'], ['programmes_piece.id'], name='gammes_production_programme_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='gammes_production_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('gestion_filtrage',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nom_filtre', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('niveau', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('actif', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('commande_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fournisseur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='gestion_filtrage_client_id_fkey'),
    sa.ForeignKeyConstraint(['commande_id'], ['commandes.id'], name='gestion_filtrage_commande_id_fkey'),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], name='gestion_filtrage_fournisseur_id_fkey'),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='gestion_filtrage_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='gestion_filtrage_pkey')
    )
    op.create_index('ix_gestion_filtrage_id', 'gestion_filtrage', ['id'], unique=False)
    op.create_table('commande_pieces',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('commande_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('piece_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantite', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['commande_id'], ['commandes.id'], name='commande_pieces_commande_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], name='commande_pieces_piece_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='commande_pieces_pkey')
    )
    op.create_table('documents_qualite',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('titre', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('type_document', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('reference_norme', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('fichier_path', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('version', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('date_ajout', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('actif', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('categorie', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='documents_qualite_pkey')
    )
    op.create_table('affectation_machine',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_affectation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('tache', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='affectation_machine_machine_id_fkey'),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='affectation_machine_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='affectation_machine_pkey')
    )
    op.create_table('materiaux',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('materiaux_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('afnor', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('stock', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('durete', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('fournisseur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('est_aeronautique', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('certificat_matiere', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], name='materiaux_fournisseur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='materiaux_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('absences',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_debut', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_fin', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('type_absence', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('commentaire', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], name='absences_utilisateur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='absences_pkey')
    )
    op.create_table('controle_piece',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('instrument_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('piece_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('resultat', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('date_controle', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('remarque', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments_controle.id'], name='controle_piece_instrument_id_fkey'),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], name='controle_piece_piece_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='controle_piece_pkey')
    )
    op.create_table('evaluations_fournisseur',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fournisseur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_evaluation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('critere', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('note', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('commentaire', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], name='evaluations_fournisseur_fournisseur_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='evaluations_fournisseur_pkey')
    )
    op.create_table('planning_machine',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('plage_horaire', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('tache', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('charge_estimee', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gamme_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('optimise_par_ia', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], name='planning_machine_gamme_id_fkey'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='planning_machine_machine_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='planning_machine_pkey')
    )
    # ### end Alembic commands ###
