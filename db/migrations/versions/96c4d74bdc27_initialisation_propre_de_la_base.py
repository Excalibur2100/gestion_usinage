"""Initialisation propre de la base

Revision ID: 96c4d74bdc27
Revises: 78959e1405ba
Create Date: 2025-03-22 17:36:24.890995

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '96c4d74bdc27'
down_revision: Union[str, None] = '78959e1405ba'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('epi_utilisateur',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('epi_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['epi_id'], ['epi.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('commandes', sa.Column('machine_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'commandes', 'machines', ['machine_id'], ['id'])
    op.add_column('devis', sa.Column('machine_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'devis', 'machines', ['machine_id'], ['id'])
    op.add_column('epi', sa.Column('qhse_id', sa.Integer(), nullable=True))
    op.add_column('epi', sa.Column('finance_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'epi', 'qhse', ['qhse_id'], ['id'])
    op.create_foreign_key(None, 'epi', 'finance', ['finance_id'], ['id'])
    op.add_column('finance', sa.Column('materiau_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'finance', 'materiaux', ['materiau_id'], ['id'])
    op.add_column('instruments_controle', sa.Column('qhse_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'instruments_controle', 'qhse', ['qhse_id'], ['id'])
    op.add_column('outils', sa.Column('machine_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'outils', 'machines', ['machine_id'], ['id'])
    op.add_column('pieces', sa.Column('machine_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'pieces', 'machines', ['machine_id'], ['id'])
    op.add_column('qhse', sa.Column('conformite', sa.Boolean(), nullable=True))
    op.drop_constraint('qhse_utilisateur_id_fkey', 'qhse', type_='foreignkey')
    op.drop_constraint('qhse_instrument_id_fkey', 'qhse', type_='foreignkey')
    op.drop_constraint('qhse_commande_id_fkey', 'qhse', type_='foreignkey')
    op.drop_constraint('qhse_devis_id_fkey', 'qhse', type_='foreignkey')
    op.drop_constraint('qhse_epi_id_fkey', 'qhse', type_='foreignkey')
    op.drop_constraint('qhse_gamme_id_fkey', 'qhse', type_='foreignkey')
    op.drop_constraint('qhse_client_id_fkey', 'qhse', type_='foreignkey')
    op.drop_constraint('qhse_tracabilite_id_fkey', 'qhse', type_='foreignkey')
    op.drop_constraint('qhse_fournisseur_id_fkey', 'qhse', type_='foreignkey')
    op.drop_column('qhse', 'devis_id')
    op.drop_column('qhse', 'instrument_id')
    op.drop_column('qhse', 'client_id')
    op.drop_column('qhse', 'gamme_id')
    op.drop_column('qhse', 'fournisseur_id')
    op.drop_column('qhse', 'epi_id')
    op.drop_column('qhse', 'conformité')
    op.drop_column('qhse', 'utilisateur_id')
    op.drop_column('qhse', 'tracabilite_id')
    op.drop_column('qhse', 'commande_id')
    op.add_column('rh', sa.Column('utilisateur_id', sa.Integer(), nullable=True))
    op.drop_constraint('rh_finance_id_fkey', 'rh', type_='foreignkey')
    op.create_foreign_key(None, 'rh', 'utilisateurs', ['utilisateur_id'], ['id'])
    op.drop_column('rh', 'nom')
    op.drop_column('rh', 'finance_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rh', sa.Column('finance_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('rh', sa.Column('nom', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'rh', type_='foreignkey')
    op.create_foreign_key('rh_finance_id_fkey', 'rh', 'finance', ['finance_id'], ['id'])
    op.drop_column('rh', 'utilisateur_id')
    op.add_column('qhse', sa.Column('commande_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('qhse', sa.Column('tracabilite_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('qhse', sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('qhse', sa.Column('conformité', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('qhse', sa.Column('epi_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('qhse', sa.Column('fournisseur_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('qhse', sa.Column('gamme_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('qhse', sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('qhse', sa.Column('instrument_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('qhse', sa.Column('devis_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('qhse_fournisseur_id_fkey', 'qhse', 'fournisseurs', ['fournisseur_id'], ['id'])
    op.create_foreign_key('qhse_tracabilite_id_fkey', 'qhse', 'tracabilite', ['tracabilite_id'], ['id'])
    op.create_foreign_key('qhse_client_id_fkey', 'qhse', 'clients', ['client_id'], ['id'])
    op.create_foreign_key('qhse_gamme_id_fkey', 'qhse', 'gammes_production', ['gamme_id'], ['id'])
    op.create_foreign_key('qhse_epi_id_fkey', 'qhse', 'epi', ['epi_id'], ['id'])
    op.create_foreign_key('qhse_devis_id_fkey', 'qhse', 'devis', ['devis_id'], ['id'])
    op.create_foreign_key('qhse_commande_id_fkey', 'qhse', 'commandes', ['commande_id'], ['id'])
    op.create_foreign_key('qhse_instrument_id_fkey', 'qhse', 'instruments_controle', ['instrument_id'], ['id'])
    op.create_foreign_key('qhse_utilisateur_id_fkey', 'qhse', 'utilisateurs', ['utilisateur_id'], ['id'])
    op.drop_column('qhse', 'conformite')
    op.drop_constraint(None, 'pieces', type_='foreignkey')
    op.drop_column('pieces', 'machine_id')
    op.drop_constraint(None, 'outils', type_='foreignkey')
    op.drop_column('outils', 'machine_id')
    op.drop_constraint(None, 'instruments_controle', type_='foreignkey')
    op.drop_column('instruments_controle', 'qhse_id')
    op.drop_constraint(None, 'finance', type_='foreignkey')
    op.drop_column('finance', 'materiau_id')
    op.drop_constraint(None, 'epi', type_='foreignkey')
    op.drop_constraint(None, 'epi', type_='foreignkey')
    op.drop_column('epi', 'finance_id')
    op.drop_column('epi', 'qhse_id')
    op.drop_constraint(None, 'devis', type_='foreignkey')
    op.drop_column('devis', 'machine_id')
    op.drop_constraint(None, 'commandes', type_='foreignkey')
    op.drop_column('commandes', 'machine_id')
    op.drop_table('epi_utilisateur')
    # ### end Alembic commands ###
