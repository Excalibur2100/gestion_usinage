"""Initial tables

Revision ID: a17152685f65
Revises: 01865cd9db71
Create Date: 2025-03-23 17:50:57.734267

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a17152685f65'
down_revision: Union[str, None] = '01865cd9db71'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('absences', 'date_debut',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('absences', 'date_fin',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('affectation_machine', sa.Column('date_affectation', sa.DateTime(), nullable=True))
    op.add_column('affectation_machine', sa.Column('tache', sa.String(length=255), nullable=True))
    op.add_column('affectation_machine', sa.Column('statut', sa.String(length=50), nullable=True))
    op.drop_column('affectation_machine', 'date_fin')
    op.drop_column('affectation_machine', 'date_debut')
    op.alter_column('clients', 'telephone',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.drop_constraint('clients_email_key', 'clients', type_='unique')
    op.alter_column('commande_pieces', 'quantite',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('commandes', 'client_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('commandes_machine_id_fkey', 'commandes', type_='foreignkey')
    op.drop_column('commandes', 'machine_id')
    op.drop_constraint('devis_machine_id_fkey', 'devis', type_='foreignkey')
    op.drop_column('devis', 'machine_id')
    op.add_column('epi_utilisateur', sa.Column('date_distribution', sa.DateTime(), nullable=True))
    op.add_column('epi_utilisateur', sa.Column('quantite', sa.Integer(), nullable=True))
    op.add_column('finance', sa.Column('fournisseur_id', sa.Integer(), nullable=True))
    op.add_column('finance', sa.Column('piece_id', sa.Integer(), nullable=True))
    op.drop_constraint('finance_epi_id_fkey', 'finance', type_='foreignkey')
    op.drop_constraint('finance_instrument_id_fkey', 'finance', type_='foreignkey')
    op.create_foreign_key(None, 'finance', 'fournisseurs', ['fournisseur_id'], ['id'])
    op.create_foreign_key(None, 'finance', 'pieces', ['piece_id'], ['id'])
    op.drop_column('finance', 'instrument_id')
    op.drop_column('finance', 'epi_id')
    op.alter_column('formations', 'nom',
               existing_type=sa.VARCHAR(length=150),
               nullable=True)
    op.add_column('fournisseurs', sa.Column('site_web', sa.String(length=255), nullable=True))
    op.alter_column('machine_outil', 'machine_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('machine_outil', 'outil_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('machine_outil', 'id')
    op.alter_column('machines', 'nom',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('materiaux', 'nom',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('materiaux', 'type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('outils', 'nom',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('pieces', 'nom',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_constraint('pieces_numero_plan_key', 'pieces', type_='unique')
    op.drop_constraint('pieces_machine_id_fkey', 'pieces', type_='foreignkey')
    op.drop_column('pieces', 'machine_id')
    op.drop_column('pieces', 'date_creation')
    op.drop_column('rh', 'date_fin')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rh', sa.Column('date_fin', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('pieces', sa.Column('date_creation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('pieces', sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('pieces_machine_id_fkey', 'pieces', 'machines', ['machine_id'], ['id'])
    op.create_unique_constraint('pieces_numero_plan_key', 'pieces', ['numero_plan'])
    op.alter_column('pieces', 'nom',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('outils', 'nom',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('materiaux', 'type',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.alter_column('materiaux', 'nom',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('machines', 'nom',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.add_column('machine_outil', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.alter_column('machine_outil', 'outil_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('machine_outil', 'machine_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('fournisseurs', 'site_web')
    op.alter_column('formations', 'nom',
               existing_type=sa.VARCHAR(length=150),
               nullable=False)
    op.add_column('finance', sa.Column('epi_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('finance', sa.Column('instrument_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'finance', type_='foreignkey')
    op.drop_constraint(None, 'finance', type_='foreignkey')
    op.create_foreign_key('finance_instrument_id_fkey', 'finance', 'instruments_controle', ['instrument_id'], ['id'])
    op.create_foreign_key('finance_epi_id_fkey', 'finance', 'epi', ['epi_id'], ['id'])
    op.drop_column('finance', 'piece_id')
    op.drop_column('finance', 'fournisseur_id')
    op.drop_column('epi_utilisateur', 'quantite')
    op.drop_column('epi_utilisateur', 'date_distribution')
    op.add_column('devis', sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('devis_machine_id_fkey', 'devis', 'machines', ['machine_id'], ['id'])
    op.add_column('commandes', sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('commandes_machine_id_fkey', 'commandes', 'machines', ['machine_id'], ['id'])
    op.alter_column('commandes', 'client_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('commande_pieces', 'quantite',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_unique_constraint('clients_email_key', 'clients', ['email'])
    op.alter_column('clients', 'telephone',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.add_column('affectation_machine', sa.Column('date_debut', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('affectation_machine', sa.Column('date_fin', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('affectation_machine', 'statut')
    op.drop_column('affectation_machine', 'tache')
    op.drop_column('affectation_machine', 'date_affectation')
    op.alter_column('absences', 'date_fin',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('absences', 'date_debut',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###
