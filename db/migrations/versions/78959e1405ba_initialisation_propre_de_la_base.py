"""Initialisation propre de la base

Revision ID: 78959e1405ba
Revises: c0d910320071
Create Date: 2025-03-22 17:30:42.275740

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '78959e1405ba'
down_revision: Union[str, None] = 'c0d910320071'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('machine_outil')
    op.drop_constraint('commandes_machine_id_fkey', 'commandes', type_='foreignkey')
    op.drop_column('commandes', 'machine_id')
    op.drop_constraint('devis_piece_id_fkey', 'devis', type_='foreignkey')
    op.drop_column('devis', 'piece_id')
    op.drop_column('instruments_controle', 'conforme_qhse')
    op.add_column('qhse', sa.Column('conformité', sa.Boolean(), nullable=True))
    op.add_column('qhse', sa.Column('utilisateur_id', sa.Integer(), nullable=True))
    op.add_column('qhse', sa.Column('fournisseur_id', sa.Integer(), nullable=True))
    op.add_column('qhse', sa.Column('client_id', sa.Integer(), nullable=True))
    op.add_column('qhse', sa.Column('commande_id', sa.Integer(), nullable=True))
    op.add_column('qhse', sa.Column('devis_id', sa.Integer(), nullable=True))
    op.add_column('qhse', sa.Column('gamme_id', sa.Integer(), nullable=True))
    op.add_column('qhse', sa.Column('instrument_id', sa.Integer(), nullable=True))
    op.add_column('qhse', sa.Column('epi_id', sa.Integer(), nullable=True))
    op.add_column('qhse', sa.Column('materiau_id', sa.Integer(), nullable=True))
    op.add_column('qhse', sa.Column('tracabilite_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'qhse', 'devis', ['devis_id'], ['id'])
    op.create_foreign_key(None, 'qhse', 'fournisseurs', ['fournisseur_id'], ['id'])
    op.create_foreign_key(None, 'qhse', 'utilisateurs', ['utilisateur_id'], ['id'])
    op.create_foreign_key(None, 'qhse', 'gammes_production', ['gamme_id'], ['id'])
    op.create_foreign_key(None, 'qhse', 'instruments_controle', ['instrument_id'], ['id'])
    op.create_foreign_key(None, 'qhse', 'materiaux', ['materiau_id'], ['id'])
    op.create_foreign_key(None, 'qhse', 'commandes', ['commande_id'], ['id'])
    op.create_foreign_key(None, 'qhse', 'clients', ['client_id'], ['id'])
    op.create_foreign_key(None, 'qhse', 'epi', ['epi_id'], ['id'])
    op.create_foreign_key(None, 'qhse', 'tracabilite', ['tracabilite_id'], ['id'])
    op.drop_column('qhse', 'conformite')
    op.add_column('rh', sa.Column('nom', sa.String(length=100), nullable=True))
    op.add_column('rh', sa.Column('finance_id', sa.Integer(), nullable=True))
    op.drop_constraint('rh_utilisateur_id_fkey', 'rh', type_='foreignkey')
    op.create_foreign_key(None, 'rh', 'finance', ['finance_id'], ['id'])
    op.drop_column('rh', 'salaire')
    op.drop_column('rh', 'utilisateur_id')
    op.drop_constraint('utilisateurs_epi_id_fkey', 'utilisateurs', type_='foreignkey')
    op.drop_column('utilisateurs', 'epi_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('utilisateurs', sa.Column('epi_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('utilisateurs_epi_id_fkey', 'utilisateurs', 'epi', ['epi_id'], ['id'])
    op.add_column('rh', sa.Column('utilisateur_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('rh', sa.Column('salaire', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'rh', type_='foreignkey')
    op.create_foreign_key('rh_utilisateur_id_fkey', 'rh', 'utilisateurs', ['utilisateur_id'], ['id'])
    op.drop_column('rh', 'finance_id')
    op.drop_column('rh', 'nom')
    op.add_column('qhse', sa.Column('conformite', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'qhse', type_='foreignkey')
    op.drop_constraint(None, 'qhse', type_='foreignkey')
    op.drop_constraint(None, 'qhse', type_='foreignkey')
    op.drop_constraint(None, 'qhse', type_='foreignkey')
    op.drop_constraint(None, 'qhse', type_='foreignkey')
    op.drop_constraint(None, 'qhse', type_='foreignkey')
    op.drop_constraint(None, 'qhse', type_='foreignkey')
    op.drop_constraint(None, 'qhse', type_='foreignkey')
    op.drop_constraint(None, 'qhse', type_='foreignkey')
    op.drop_constraint(None, 'qhse', type_='foreignkey')
    op.drop_column('qhse', 'tracabilite_id')
    op.drop_column('qhse', 'materiau_id')
    op.drop_column('qhse', 'epi_id')
    op.drop_column('qhse', 'instrument_id')
    op.drop_column('qhse', 'gamme_id')
    op.drop_column('qhse', 'devis_id')
    op.drop_column('qhse', 'commande_id')
    op.drop_column('qhse', 'client_id')
    op.drop_column('qhse', 'fournisseur_id')
    op.drop_column('qhse', 'utilisateur_id')
    op.drop_column('qhse', 'conformité')
    op.add_column('instruments_controle', sa.Column('conforme_qhse', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('devis', sa.Column('piece_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('devis_piece_id_fkey', 'devis', 'pieces', ['piece_id'], ['id'])
    op.add_column('commandes', sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('commandes_machine_id_fkey', 'commandes', 'machines', ['machine_id'], ['id'])
    op.create_table('machine_outil',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('outil_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='machine_outil_machine_id_fkey'),
    sa.ForeignKeyConstraint(['outil_id'], ['outils.id'], name='machine_outil_outil_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='machine_outil_pkey')
    )
    # ### end Alembic commands ###
