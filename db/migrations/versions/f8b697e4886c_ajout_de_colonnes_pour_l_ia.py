"""Ajout de colonnes pour l'IA

Revision ID: f8b697e4886c
Revises: a091665b47a1
Create Date: 2025-03-27 20:55:30.530868

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f8b697e4886c'
down_revision: Union[str, None] = 'a091665b47a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ia_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surveillance_cameras',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(), nullable=False),
    sa.Column('emplacement', sa.String(), nullable=False),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_surveillance_cameras_id'), 'surveillance_cameras', ['id'], unique=False)
    op.create_table('controle_robot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('robot_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('statut', sa.String(), nullable=True),
    sa.Column('date_execution', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['robot_id'], ['robotique.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_controle_robot_id'), 'controle_robot', ['id'], unique=False)
    op.create_table('metrics_machine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('vibration', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gestion_filtrage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom_filtre', sa.String(), nullable=False),
    sa.Column('niveau', sa.Integer(), nullable=False),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('commande_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['commande_id'], ['commandes.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gestion_filtrage_id'), 'gestion_filtrage', ['id'], unique=False)
    op.add_column('charges_machine', sa.Column('temperature', sa.Float(), nullable=True))
    op.add_column('charges_machine', sa.Column('vibration', sa.Float(), nullable=True))
    op.add_column('machines', sa.Column('temperature_max', sa.Float(), nullable=True))
    op.add_column('machines', sa.Column('vibration_max', sa.Float(), nullable=True))
    op.add_column('maintenance', sa.Column('planifie_par_ia', sa.Boolean(), nullable=True))
    op.add_column('non_conformites', sa.Column('detecte_par_ia', sa.Boolean(), nullable=True))
    op.add_column('planning_machine', sa.Column('optimise_par_ia', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('planning_machine', 'optimise_par_ia')
    op.drop_column('non_conformites', 'detecte_par_ia')
    op.drop_column('maintenance', 'planifie_par_ia')
    op.drop_column('machines', 'vibration_max')
    op.drop_column('machines', 'temperature_max')
    op.drop_column('charges_machine', 'vibration')
    op.drop_column('charges_machine', 'temperature')
    op.drop_index(op.f('ix_gestion_filtrage_id'), table_name='gestion_filtrage')
    op.drop_table('gestion_filtrage')
    op.drop_table('metrics_machine')
    op.drop_index(op.f('ix_controle_robot_id'), table_name='controle_robot')
    op.drop_table('controle_robot')
    op.drop_index(op.f('ix_surveillance_cameras_id'), table_name='surveillance_cameras')
    op.drop_table('surveillance_cameras')
    op.drop_table('ia_logs')
    # ### end Alembic commands ###
