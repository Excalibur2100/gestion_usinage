"""Initial tables

Revision ID: 18374612a667
Revises: 80986cdb89c3
Create Date: 2025-03-23 21:21:51.134006

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '18374612a667'
down_revision: Union[str, None] = '80986cdb89c3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents_qualite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(length=150), nullable=False),
    sa.Column('type_document', sa.String(length=100), nullable=True),
    sa.Column('reference_norme', sa.String(length=100), nullable=True),
    sa.Column('fichier_path', sa.String(length=255), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('date_ajout', sa.DateTime(), nullable=True),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audits_qualite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('type_audit', sa.String(length=100), nullable=True),
    sa.Column('responsable', sa.String(length=100), nullable=True),
    sa.Column('remarques', sa.Text(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents_qualite.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents_reglementaires',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type_document', sa.String(length=100), nullable=True),
    sa.Column('date_edition', sa.DateTime(), nullable=True),
    sa.Column('valide_jusquau', sa.DateTime(), nullable=True),
    sa.Column('fichier_stocke', sa.String(length=255), nullable=True),
    sa.Column('conforme', sa.Boolean(), nullable=True),
    sa.Column('norme_associee', sa.String(length=100), nullable=True),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('droits_acces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('module', sa.String(length=100), nullable=True),
    sa.Column('peut_lire', sa.Boolean(), nullable=True),
    sa.Column('peut_creer', sa.Boolean(), nullable=True),
    sa.Column('peut_modifier', sa.Boolean(), nullable=True),
    sa.Column('peut_supprimer', sa.Boolean(), nullable=True),
    sa.Column('acces_total', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('historique_actions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=False),
    sa.Column('date_action', sa.DateTime(), nullable=True),
    sa.Column('module', sa.String(length=100), nullable=False),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('maintenance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('type_maintenance', sa.String(length=100), nullable=True),
    sa.Column('date_planifiee', sa.DateTime(), nullable=True),
    sa.Column('date_reelle', sa.DateTime(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('operateur_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('remarques', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['operateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('planning_employe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('plage_horaire', sa.String(length=50), nullable=True),
    sa.Column('tache', sa.Text(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('affectation_auto', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('postprocesseurs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=150), nullable=False),
    sa.Column('logiciel_fao', sa.String(length=100), nullable=False),
    sa.Column('extension_sortie', sa.String(length=20), nullable=True),
    sa.Column('configuration', sa.Text(), nullable=True),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('factures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_facture', sa.String(length=100), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('commande_id', sa.Integer(), nullable=True),
    sa.Column('date_emission', sa.DateTime(), nullable=True),
    sa.Column('date_echeance', sa.DateTime(), nullable=True),
    sa.Column('montant_total', sa.Float(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('mode_generation', sa.String(length=50), nullable=True),
    sa.Column('valide_par', sa.Integer(), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['commande_id'], ['commandes.id'], ),
    sa.ForeignKeyConstraint(['valide_par'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero_facture')
    )
    op.create_table('non_conformites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origine', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('action_corrective', sa.Text(), nullable=True),
    sa.Column('date_detection', sa.DateTime(), nullable=True),
    sa.Column('date_resolution', sa.DateTime(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('materiau_id', sa.Integer(), nullable=True),
    sa.Column('outil_id', sa.Integer(), nullable=True),
    sa.Column('instrument_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments_controle.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['materiau_id'], ['materiaux.id'], ),
    sa.ForeignKeyConstraint(['outil_id'], ['outils.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('programmes_piece',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('piece_id', sa.Integer(), nullable=True),
    sa.Column('nom_programme', sa.String(length=150), nullable=True),
    sa.Column('fichier_path', sa.String(length=255), nullable=True),
    sa.Column('postprocesseur_id', sa.Integer(), nullable=True),
    sa.Column('date_import', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['piece_id'], ['pieces.id'], ),
    sa.ForeignKeyConstraint(['postprocesseur_id'], ['postprocesseurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('planning_machine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('plage_horaire', sa.String(length=50), nullable=True),
    sa.Column('tache', sa.Text(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('charge_estimee', sa.Float(), nullable=True),
    sa.Column('gamme_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pointages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('gamme_id', sa.Integer(), nullable=True),
    sa.Column('date_pointage', sa.DateTime(), nullable=True),
    sa.Column('heure_debut', sa.DateTime(), nullable=False),
    sa.Column('heure_fin', sa.DateTime(), nullable=True),
    sa.Column('duree_effective', sa.Float(), nullable=True),
    sa.Column('remarques', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['gamme_id'], ['gammes_production.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pointages')
    op.drop_table('planning_machine')
    op.drop_table('programmes_piece')
    op.drop_table('non_conformites')
    op.drop_table('factures')
    op.drop_table('postprocesseurs')
    op.drop_table('planning_employe')
    op.drop_table('maintenance')
    op.drop_table('historique_actions')
    op.drop_table('droits_acces')
    op.drop_table('documents_reglementaires')
    op.drop_table('audits_qualite')
    op.drop_table('documents_qualite')
    # ### end Alembic commands ###
